name: CD

on:
  push:
    branches:
      - main

jobs:
  createRelease:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Get Package Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
        with:
          path: projects/go-lib
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v4
        with:
          application_id: ${{ secrets.GH_ROLE_APPLICATION_ID }}
          application_private_key: ${{ secrets.GH_ROLE_APPLICATION_PRIVATE_KEY }}
      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        with:
          generate_release_notes: true
          tag_name: v${{ steps.package-version.outputs.current-version }}
          target_commitish: main
  publishPackage:
    name: Publish New Package
    runs-on: ubuntu-latest
    needs: createRelease
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: npm-${{ hashFiles('package-lock.json') }}
      - name: Read .nvmrc
        run: echo NVMRC=`cat .nvmrc` >> $GITHUB_ENV
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NVMRC }}
      - name: Install npm Packages
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Publish Package
        run: npm run publish -- --ignore-scripts
